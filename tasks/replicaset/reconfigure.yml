---
- name: Query existing MongoDB replicaset members
  community.mongodb.mongodb_shell:
    eval: "rs.status().members"
    mongo_cmd: "{{ mongodb_shell | default(omit) }}"
  retries: "{{ mongodb_query_retries }}"
  delay: "{{ mongodb_query_delay }}"
  register: mongodb_status
  until: mongodb_status is succeeded
  changed_when: false
  run_once: true

- name: Set MongoDB replicaset member facts
  ansible.builtin.set_fact:
    _existing_members: "{{ _members_list | map(_map_format, _format_existing) | map('from_json') }}"
  vars:
    _map_format: 'nephelaiio.plugins.map_format'
    _format_existing: '{"host": "%s"}'
    _members_list: "{{ mongodb_status.transformed_output | map(attribute='name') | list }}"

- name: Add new member to MongoDB replicaset
  community.mongodb.mongodb_replicaset:
    replica_set: "{{ mongodb_replicaset_name }}"
    members: "{{ _existing_members + [_update_member] }}"
    reconfigure: true
    validate: false
  vars:
    _update_member:
      host: "{{ item }}"
      hidden: false
      votes: 1
      priority: 1
  when: _add_member | default('false') | bool

- name: Drop stale member from MongoDB replicaset
  community.mongodb.mongodb_replicaset:
    replica_set: "{{ mongodb_replicaset_name }}"
    members: "{{ _existing_members | rejectattr('host', 'equalto', item) }}"
    reconfigure: true
    validate: false
  when: _remove_member | default('false') | bool

- name: Wait for replicaset to stabilize
  community.mongodb.mongodb_status:
    replica_set: "{{ mongodb_replicaset_name }}"
    validate: minimal
    poll: "{{ mongodb_reconfig_poll }}"
    interval: "{{ mongodb_reconfig_interval }}"
  retries: "{{ mongodb_converge_retries }}"
  delay: "{{ mongodb_converge_delay }}"
  register: mongodb_status
  until: mongodb_status is succeeded
  changed_when: false
