---
- name: Reconfigure replica set
  hosts: all
  vars:
    _hosts1: "{{ play_hosts[:1] }}"
    _hosts2: "{{ play_hosts[:2] }}"
    _hosts3: "{{ play_hosts[:3] }}"
    _hosts4: "{{ play_hosts[:4] }}"
    _hosts5: "{{ play_hosts[:5] }}"
    _hosts6: "{{ play_hosts[:6] }}"
    _hosts7: "{{ play_hosts[:7] }}"
  tasks:
    - name: Set base facts
      ansible.builtin.set_fact:
        _reconfigure1_failed: false
        _reconfigure2_failed: false
        _reconfigure4_failed: false
        _reconfigure6_failed: false

    - name: Create virtualenv
      ansible.builtin.tempfile:
        state: directory
        prefix: .virtualenv
        path: "~"
      register: _virtualenv_tmpdir
      changed_when: false

    - name: Initialize virtualenv
      ansible.builtin.pip:
        name:
          - pymongo
          - python-gnupg
        virtualenv: "{{ _virtualenv_tmpdir.path }}/venv"
      changed_when: false

    - name: Change python interpreter
      ansible.builtin.set_fact:
        ansible_python_interpreter: "{{ _virtualenv_tmpdir.path }}/venv/bin/python"

    - name: Test replicaset reconfiguration scenarios
      block:
        - name: Deploy 3 node cluster
          ansible.builtin.include_role:
            name: wpnops.mongodb
          vars:
            _map_format: 'nephelaiio.plugins.map_format'
            _addr_attrs: ['ansible_default_ipv4', 'address']
            _addresses: "{{ _hosts3 | map('extract', hostvars, _addr_attrs) }}"
            _members: "{{ _addresses | list }}"
            mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
          when: inventory_hostname in _hosts3

        - name: Attempt 2 node cluster scale down
          block:
            - name: Scale down to 2 node cluster
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts2 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts2

          rescue:
            - name: Set result facts
              ansible.builtin.set_fact:
                _reconfigure2_failed: true

        - name: Fail on broken replicaset member configuration
          ansible.builtin.assert:
            that: _reconfigure1_failed
            fail_msg: "broken replicaset member configuration operation must fail"

        - name: Scale up to 5 node cluster
          ansible.builtin.include_role:
            name: wpnops.mongodb
          vars:
            _map_format: 'nephelaiio.plugins.map_format'
            _addr_attrs: ['ansible_default_ipv4', 'address']
            _addresses: "{{ _hosts5 | map('extract', hostvars, _addr_attrs) }}"
            _members: "{{ _addresses | list }}"
            mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
          when: inventory_hostname in _hosts5

        - name: Attempt 4 node cluster scale down
          block:
            - name: Scale down to 4 node cluster
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts4 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts4

          rescue:
            - name: Set result facts
              ansible.builtin.set_fact:
                _reconfigure4_failed: true

        - name: Fail on broken replicaset member configuration
          ansible.builtin.assert:
            that: _reconfigure4_failed
            fail_msg: "broken replicaset member configuration operation must fail"

        - name: Scale up to 7 node cluster
          ansible.builtin.include_role:
            name: wpnops.mongodb
          vars:
            _map_format: 'nephelaiio.plugins.map_format'
            _addr_attrs: ['ansible_default_ipv4', 'address']
            _addresses: "{{ _hosts7 | map('extract', hostvars, _addr_attrs) }}"
            _members: "{{ _addresses | list }}"
            mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
          when: inventory_hostname in _hosts7

        - name: Attempt 6 node cluster scale down
          block:
            - name: Scale down to 6 node cluster
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts6 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts6

          rescue:
            - name: Set result facts
              ansible.builtin.set_fact:
                _reconfigure6_failed: true

        - name: Fail on broken replicaset member configuration
          ansible.builtin.assert:
            that: _reconfigure6_failed
            fail_msg: "broken replicaset member configuration operation must fail"

        - name: Scale down to 5 node cluster
          block:
            - name: Stop inactive nodes
              ansible.builtin.include_role:
                name: wpnops.mongodb
                tasks_from: service
              vars:
                mongodb_service_state: stopped
              when: inventory_hostname not in _hosts5

            - name: Reconfigure active nodes
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts5 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts5

        - name: Scale down to 3 node cluster
          block:
            - name: Stop inactive nodes
              ansible.builtin.include_role:
                name: wpnops.mongodb
                tasks_from: service
              vars:
                mongodb_service_state: stopped
              when: inventory_hostname not in _hosts3

            - name: Reconfigure active nodes
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts3 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts5

        - name: Attempt 1 node cluster scale down
          block:
            - name: Scale down to 1 node cluster
              ansible.builtin.include_role:
                name: wpnops.mongodb
              vars:
                _map_format: 'nephelaiio.plugins.map_format'
                _addr_attrs: ['ansible_default_ipv4', 'address']
                _addresses: "{{ _hosts1 | map('extract', hostvars, _addr_attrs) }}"
                _members: "{{ _addresses | list }}"
                mongodb_replicaset_members: "{{ _members | map(_map_format, '%s:' + mongodb_port) | list }}"
              when: inventory_hostname in _hosts1

          rescue:
            - name: Set result facts
              ansible.builtin.set_fact:
                _reconfigure1_failed: true

        - name: Fail on broken replicaset member configuration
          ansible.builtin.assert:
            that: _reconfigure1_failed
            fail_msg: "broken replicaset member configuration operation must fail"

      always:
        - name: Destroy virtualenv
          ansible.builtin.file:
            path: "{{ _virtualenv_tmpdir.path }}"
            state: absent
          changed_when: false
